(require 'etags)
(provide 'my-tags)

(defvar my-tag-prog "etags"
  "* The tag program executable to use.")
(defvar my-tag-c "*.c"
  "* Extension for C files, or any other files you want in the list.")
(defvar my-tag-h "*.h"
  "* Extension for header files, or any other files you want in the
list after `my-tag-c'.")
(defvar my-tag-sh "/bin/sh"
  "* Shell to use to run tags.")

;;;###autoload
(defun my-tag-tree (dir &optional buf)
  "Call tags on an entire tree rather than just one directory.
If buf is defined and is not empty, it is assumed to contain lines of
files to perform tags on."
  (interactive "DDir: ")
  (if buf
      (when (stringp buf) (setq buf (get-buffer-create buf)))
    (setq buf (get-buffer-create "*tag tree*"))
    ;; Emacs does not have (erase-buffer buf) :(
    (save-current-buffer (set-buffer buf) (erase-buffer)))

  (setq dir (expand-file-name dir))

  (when (eq (buffer-size buf) 0)
    ;; Doing the find in two steps seems to work better
    (call-process "find" nil (list buf nil) nil dir "-name" my-tag-c)
    (call-process "find" nil (list buf nil) nil dir "-name" my-tag-h))

  (with-current-buffer buf
    (call-process-region (point-min) (point-max)
			 my-tag-prog nil nil nil
			 "-o" (concat dir "TAGS") "-"))
    )

;;;###autoload
(defun my-tag-simple ()
  (call-process my-tag-sh nil nil nil "-c"
		(format "%s %s %s" my-tag-prog my-tag-c my-tag-h)))
