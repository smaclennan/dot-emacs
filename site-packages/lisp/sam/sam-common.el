;;; sam-common.el --- SAM's Common macros/functions

;; Copyright (C) 2011 Sean MacLennan

;; GNU emacs sets emacs
;; XEmacs sets xemacs
;; SXEmacs sets sxemacs and xemacs
(defmacro my-feature-cond (&rest clauses)
  "Test CLAUSES for feature at compile time.
Each clause is (FEATURE BODY...)."
  (dolist (x clauses)
    (let ((feature (car x))
	  (body (cdr x)))
      (when (or (eq feature t)
		(featurep feature))
	(return (cons 'progn body))))))
(put 'my-feature-cond 'lisp-indent-hook 'defun)

(defmacro my-bound-cond (&rest clauses)
  "Test CLAUSES for binding at compile time.
Each clause is (BOUND BODY...)."
  (dolist (x clauses)
    (let ((feature (car x))
	  (body (cdr x)))
      (when (or (eq feature t)
		(boundp feature)
		(fboundp feature))
	(return (cons 'progn body))))))

(defun my-expand-dir-name (name &optional default-dir)
  "Convert directory NAME to absolute, and canonicalize it.
This is guaranteed not to have a / at the end."
  (setq name (expand-file-name name)) ;; this does the bulk of the work
  (when (string-match "/+$" name)
    (setq name (replace-match "" nil nil name)))
  (while (string-match "//+" name)
    (setq name (replace-match "/" nil nil name)))
  name)

;; For GNU Emacs
(eval-when-compile (require 'cl))

(provide 'sam-common)
