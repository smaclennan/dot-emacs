(defvar kloc-dir nil "*Klocwork project directory.")

(require 'compile)
(require 'trim)

;;;###autoload
(defun kloc (arg)
  "Check the current buffer with klockwork. With an arg, ignore
guideline violations."
  (interactive "P")
  (let ((buff (get-buffer-create "*kloc*")))
    ;; SAM FIXME - async (or at least async output)
    (shell-command (concat "kwcheck run -y -pd=" kloc-dir " " buffer-file-name)
		   buff buff)
    (with-current-buffer buff
      (when arg
	(goto-char (point-min))
	(while (re-search-forward "^.*Guideline Violation.*$" nil t)
	  (kill-whole-line 2) ;; next line will always be a comment
	  ))

      (goto-char (point-min))
      (while (re-search-forward "^[0-9]+ (System: [0-9]+) " nil t)
	(replace-match ""))
      (goto-char (point-min))
      (while (re-search-forward "^[^:]+:[0-9]+" nil t)
	(goto-char (match-end 0))
	(insert ":1"))

      (trim-empty-lines)

      (compilation-mode "kloc")
      (setq buffer-read-only nil)
      (compilation--parse-region (point-min) (point-max)))
    (display-buffer buff)))

(provide 'kloc)
