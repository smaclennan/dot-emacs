(require 'sam-common) ;; my-interactive-p

(defun inches-print (list)
  "Pretty print the `inches-decimal-to-fraction' output."
  (let ((feet (nth 0 list)) (inches (nth 1 list))
	(frac (nth 2 list)) (denom (nth 3 list))
	str)
    (if (> feet 0)
	(setq str (format "%d' %d" feet inches))
      (setq str (format "%d" inches)))
    (when (> frac 0)
      (setq str (concat str (format " %d/%d" frac denom))))
    (message "%s\"" str)))

;;;###autoload
(defun inches-decimal-to-fraction (denom inches)
  "When called interactively, asks for inches as a decimal and
prints as feet/inches/fraction. The default fraction is
16ths. A prefix arg changes the denominator.  When non-interactive
returns a list '(feet inches fraction denom)."
  (interactive "P\nnInches: ")
  (unless denom (setq denom 16))
  (let ((feet (floor (/ inches 12)))
	(frac (round (* (mod inches 1) denom)))
	out)
    (when (> feet 0)
      (setq inches (- inches (* feet 12))))
    (setq inches (floor inches))
    (if (> frac 0)
	(while (eq (logand frac 1) 0)
	  (setq frac (/ frac 2))
	  (setq denom (/ denom 2)))
      (setq denom 0))
    (setq out (list feet inches frac denom))
    (when (my-interactive-p) (inches-print out))
    out))

;;;###autoload
(defun mm2inches (denom mm)
  "Print millimeters as inches. See `inches-decimal-to-fraction'."
  (interactive "P\nnmm: ")
  (inches-print (inches-decimal-to-fraction denom (* mm 0.0393701))))

;;;###autoload
(defun cm2inches (denom cm)
  "Print centimeters as feet/inches. See `inches-decimal-to-fraction'."
  (interactive "P\nncm: ")
  (mm2inches denom (* cm 10)))

;;;###autoload
(defun imperial2cm (feet inches)
  "Handy for converting feet + inches to cms for heights."
  (interactive "nfeet: \nninches: ")
  (let ((cm (* (+ (* feet 12) inches) 2.54)))
    (message "%dcm" cm)))

;;;###autoload
(defun m2inches (denom m)
  "Print meters as feet/inches. See `inches-decimal-to-fraction'."
  (interactive "P\nnm: ")
  (mm2inches denom (* m 1000)))
